name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-and-test:
    name: Build and test

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v2
 
    - name: Setup .NET Core 2.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.x
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test with dotnet
      run: dotnet test --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }}"

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v2
      with:
        name: dotnet-results-${{ matrix.os }}
        path: TestResults-${{ matrix.os }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }} 

      
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    #if: github.ref == 'refs/heads/master'
    steps:

    - uses: actions/checkout@v2

    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src/SortCS
      
    - name: Build
      run: dotnet build -c Release --no-restore
      working-directory: src/SortCS

    - name: Build
      run: dotnet pack
      working-directory: src/SortCS

